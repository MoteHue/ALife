#pragma kernel FunctionKernel

#define PI 3.14159265358979323846

RWStructuredBuffer<float3> _Positions;
uint _Resolution;
float _Step;
float _Time;
uint _IndexStep;

uint _Count;

uint GetIndex(uint3 id) {
	return (id.x * 64) + (id.y * 64 * 4) + (id.z * 64 * 4 * 4);
}

[numthreads(1, 1, 1)]
void FunctionKernel(uint3 id: SV_GroupID) {
	//float2 uv = GetUV(id);
	//SetPosition(id, Wave(uv.x, uv.y, _Time));
	//SetPosition(id, GetPosFromID(id.x, id.y, id.z));
	uint index = GetIndex(id);
	float3 p;
	p.x = id.x * _IndexStep;
	p.y = id.y * _IndexStep;
	p.z = id.z * _IndexStep;
	_Positions[index] = p;
	
	for (int x = 0; x < 4; x++) {
		for (int y = 0; y < 4; y++) {
			for (int z = 0; z < 4; z++) {
				float3 p;
				p.x = id.x * _IndexStep + x;
				p.y = id.y * _IndexStep + y;
				p.z = id.z * _IndexStep + z;
				_Positions[index + x + y * 4 + z * 16] = p;
			}
		}
	}
	
}

